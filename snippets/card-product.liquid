{% style %}
.card-wrapper {
  /* width: 100%; */
  /* max-width: 400px; */
  margin: 0 auto;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.20);
  height: 600px;
  display: flex;
  flex-direction: column;
  transition: transform 0.3s ease, box-shadow 0.3s ease; 
}

.card-wrapper:hover {
  /* transform: scale(1.05); */
  box-shadow: 8px 8px 20px rgba(0, 0, 0, 0.3);
}

.card {
  display: flex;
  flex-direction: column;
  gap: 2px;
  /* flex-grow: 1;  */
}

.card-image {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: Lightgrey;

}

.card-image img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.card-content {
  display: flex;
  flex-direction: column;
  justify-content: space-around; 
  padding: 10px 10px 20px 10px;
}

.card-content > * {
  padding-left:6px;
}

.product-title {
  font-family:var(--font-heading-family);
 
}

.product-title a , .product-card-description a{
  color: #111;
  text-decoration: none;
}

.product-title a:hover,  .product-card-description a:hover{
  text-decoration: underline;
}
.product-card-description {
  color: #555;
  margin-bottom: 10px;
}

.product-price {
  font-weight: bold;
  margin-bottom: 10px;
}

.variant-quantity-row {
  display: flex;
  /* justify-content: space-between; */
  align-items: center;
  gap: 2px;
  margin-bottom: 12px;
  flex-wrap: wrap;
}

.variant-select {
  flex: 1;
}

.variant-select select {
  width: 70%;
  padding: 6px 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
}


.quantity-wrapper {
  display: flex;
  align-items: center;
  gap: 5px; 
  padding-right:10px;

}

.quantity-wrapper button {
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  font-size: 25px;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}
.quantity-wrapper  button:first-of-type:hover {
  transform: scale(1.1);
  border: 2px solid var(--color-secondary-medium-green); 
}
.quantity-wrapper button:first-of-type {
  background-color: var(--color-primary-palest-green);
  font-weight:black;
  color: #fff;

}

.quantity-wrapper button:last-of-type {
  background-color: var(--color-secondary-medium-green);
}
.quantity-wrapper  button:last-of-type:hover {
  transform: scale(1.1);
  border: 2px solid rgb(207, 220, 201); 
}
.quantity-wrapper input[type="number"] {
  width: 40px;
  text-align: center;
  font-weight: bold;
  color: black;
  font-size: 18px;
  border: none;
  outline: none;
  background: transparent;
  padding: 0; 
  margin: 0;  
}

.btn-row {
  display: flex;
  gap: 2rem; 
  margin-top: 2.1rem;
}

/* Style for both buttons */
.add-to-cart, .how-to-use-link{
  font-family:var(--font-body-family);
  padding: 1rem 2rem;
  border-radius: 9px;
  text-decoration: none;
  text-align: center;
  color: #fff;
  background-color: var(--color-heading-deep-green);
  border: none;
  cursor: pointer;
}
.how-to-use-link{
  border: 1px solid black ;

  background-color: white;
  
}
.how-to-use-link a{
  text-decoration: none;
  color:#111;
  
}
.add-to-cart:hover {
  background-color: var(--color-primary-palest-green);
color:var(--color-body-text-black);
}
.how-to-use-link:hover {
  background-color: var(--color-primary-palest-green);

}


{% endstyle %}



<div class="card-wrapper">
  <div class="card">
    {% if card_product.featured_media %}
      <div class="card-image">
        <a href="{{ card_product.url }}">
          <img
            srcset="
              {% if card_product.featured_media.width >= 165 %}{{ card_product.featured_media | image_url: width: 165 }} 165w,{% endif %}
              {% if card_product.featured_media.width >= 360 %}{{ card_product.featured_media | image_url: width: 360 }} 360w,{% endif %}
              {% if card_product.featured_media.width >= 533 %}{{ card_product.featured_media | image_url: width: 533 }} 533w,{% endif %}
              {% if card_product.featured_media.width >= 720 %}{{ card_product.featured_media | image_url: width: 720 }} 720w,{% endif %}
               {% if card_product.featured_media.width >= 940 %}{{ card_product.featured_media | image_url: width: 940 }} 940w,{% endif %}
              {% if card_product.featured_media.width >= 1066 %}{{ card_product.featured_media | image_url: width: 1066 }} 1066w,{% endif %}
              {{ card_product.featured_media | image_url }} {{ card_product.featured_media.width }}w
            "
            src="{{ card_product.featured_media | image_url: width: 533 }}"
            alt="{{ card_product.featured_media.alt | escape }}"
            class="motion-reduce"
            loading="lazy" width="100%" height="auto"
          >
        </a>
      </div>
    {% endif %}

    <div class="card-content">
      <h3 class="product-title">
        <a href="{{ card_product.url }}">
          {{ card_product.title | escape }}
        </a>
      </h3>

      {% if card_product.description != blank %}
        <p class="product-card-description">
        <a href="{{ card_product.url }}">

          {{ card_product.description | strip_html | truncate: 100 }}
        </a>
      
        </p>

      {% endif %}

      <div class="product-price">
        {% render 'price', product: card_product %}
      </div>

      <div class="variant-quantity-row">
        {% if card_product.variants.size > 1 %}
          <div class="variant-select">
            <select name="id" id="variant-select-{{ card_product.id }}">
              <option value="" disabled selected>Size</option>
              {% for variant in card_product.variants %}
                <option value="{{ variant.id }}" {% unless variant.available %}disabled{% endunless %}>
                  {{ variant.title }} {% unless variant.available %}(Sold Out){% endunless %}
                </option>
              {% endfor %}
            </select>
          </div>
        {% else %}
          <input type="hidden" name="id" id="hidden-variant-id-{{ card_product.id }}" value="{{ card_product.variants.first.id }}" {% unless card_product.variants.first.available %}disabled{% endunless %}>
        {% endif %}

        <div class="quantity-wrapper">
          <button type="button" class="quantity-button quantity-decrease" 
            {% if card_product.variants.size > 1 %}disabled{% endif %} 
            {% if card_product.variants.size <= 1 and card_product.available == false %}disabled{% endif %}>
            -
          </button>
        
          <input type="number" class="quantity-input" value="1" min="1" 
            {% if card_product.variants.size > 1 %}disabled{% endif %} 
            {% if card_product.variants.size <= 1 and card_product.available == false %}disabled{% endif %}>
        
          <button type="button" class="quantity-button quantity-increase" 
            {% if card_product.variants.size > 1 %}disabled{% endif %} 
            {% if card_product.variants.size <= 1 and card_product.available == false %}disabled{% endif %}>
            +
          </button>
        </div>
        
      </div>

      <div class="btn-row">
        <form method="post" action="/cart/add" class="btn-container" id="add-to-cart-form-{{ card_product.id }}">
          <input type="hidden" name="id" id="hidden-variant-id-{{ card_product.id }}" 
            value="{% if card_product.variants.size >= 1 %}{{ card_product.variants.first.id }}{% endif %}">
          <input type="hidden" name="quantity" id="quantity-{{ card_product.id }}" value="1">
          
          <button type="submit" class="btn add-to-cart" 
            {% if card_product.available == false %}disabled{% endif %}>
            {% if card_product.available == false %}Sold Out{% else %}Add to Cart{% endif %}
          </button>
        </form>
        

        <button class="how-to-use-link">
          <a href="/pages/how-to-use?product_id={{ card_product.id }}" >How to Use</a>
        </button>
      </div>

    </div>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const select = document.getElementById("variant-select-{{ card_product.id }}");
    const hiddenVariantInput = document.getElementById("hidden-variant-id-{{ card_product.id }}");
    const quantityWrapper = document.querySelector('.card-wrapper:has(#variant-select-{{ card_product.id }}) .quantity-wrapper');
    const quantityInput = quantityWrapper ? quantityWrapper.querySelector('.quantity-input') : null;
    const decreaseButton = quantityWrapper ? quantityWrapper.querySelector('.quantity-decrease') : null;
    const increaseButton = quantityWrapper ? quantityWrapper.querySelector('.quantity-increase') : null;
    const hiddenQuantityInput = document.getElementById("quantity-{{ card_product.id }}");
    const addToCartForm = document.getElementById("add-to-cart-form-{{ card_product.id }}");
    const addToCartButton = addToCartForm ? addToCartForm.querySelector('.add-to-cart') : null;

    function updateHiddenQuantity(quantity) {
      if (hiddenQuantityInput) {
        hiddenQuantityInput.value = quantity;
      }
    }

    if (quantityInput && hiddenQuantityInput) {
      quantityInput.addEventListener('input', function() {
        updateHiddenQuantity(this.value);
      });
    }

    if (addToCartForm && addToCartButton) {
      addToCartForm.addEventListener('submit', function(event) {
        const selectedVariantId = hiddenVariantInput.value;
        const selectedOption = select ? select.querySelector(`option[value="${selectedVariantId}"]`) : null;
        const isSingleProductSoldOut = {{ card_product.available | json }} === false && !select;

        if ((selectedOption && selectedOption.disabled) || isSingleProductSoldOut) {
          event.preventDefault(); // Prevent form submission
          alert('This product is currently sold out.'); // Or display a more user-friendly message
        } else {
          const currentQuantity = quantityInput ? quantityInput.value : '1';
          document.getElementById("quantity-{{ card_product.id }}").value = currentQuantity;
        }
      });
    }

    function disableQuantity() {
      if (quantityInput && decreaseButton && increaseButton) {
        quantityInput.disabled = true;
        decreaseButton.disabled = true;
        increaseButton.disabled = true;
      }
    }

    function enableQuantity() {
      if (quantityInput && decreaseButton && increaseButton) {
        quantityInput.disabled = false;
        decreaseButton.disabled = false;
        increaseButton.disabled = false;
      }
    }

    function updateAddToCartButtonState(isDisabled, text = 'Add to Cart') {
      if (addToCartButton) {
        addToCartButton.disabled = isDisabled;
        addToCartButton.textContent = text;
      }
    }

    // Initial state check
    const isSingleProduct = {{ card_product.variants.size | json }} <= 1;
    const isProductAvailable = {{ card_product.available | json }};

    if (isSingleProduct && !isProductAvailable) {
      updateAddToCartButtonState(true, 'Sold Out');
      disableQuantity();
    } else if (select) {
      const initialVariantId = hiddenVariantInput.value;
      const initialOption = select.querySelector(`option[value="${initialVariantId}"]`);
      if (initialOption && initialOption.disabled) {
        updateAddToCartButtonState(true, 'Sold Out');
        disableQuantity();
      } else {
        disableQuantity(); // Initially disable if multiple variants and available
      }
    } else if (isSingleProduct && isProductAvailable) {
      enableQuantity();
      updateAddToCartButtonState(false);
    }

    // Variant selection change listener
    if (select) {
      select.addEventListener("change", function () {
        hiddenVariantInput.value = this.value;
        const selectedOption = this.options[this.selectedIndex];
        if (selectedOption.disabled) {
          disableQuantity();
          updateAddToCartButtonState(true, 'Sold Out');
        } else {
          enableQuantity();
          updateAddToCartButtonState(false);
        }
      });
    }

    if (decreaseButton && quantityInput) {
      decreaseButton.addEventListener('click', function() {
        quantityInput.stepDown();
        updateHiddenQuantity(quantityInput.value);
      });
    }

    if (increaseButton && quantityInput) {
      increaseButton.addEventListener('click', function() {
        quantityInput.stepUp();
        updateHiddenQuantity(quantityInput.value);
      });
    }
  });
</script>